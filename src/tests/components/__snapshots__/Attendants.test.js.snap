// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ATTENDANT CREATE TEST SUITE should render the form for creating attendant 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "m29cvr",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "m29cvr",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Connect(CreateAttendant)>
        <CreateAttendant
          attendants={
            Object {
              "attendantCreateState": "STATE_CREATING",
            }
          }
          auth={
            Object {
              "userDetails": Object {
                "level": 2,
              },
            }
          }
          dispatch={[Function]}
          products={
            Object {
              "productCreate": "STATE_CREATE_FAILED",
              "productCreateError": "",
            }
          }
        >
          <div
            id="cover"
          >
            <Header>
              <header>
                <div
                  className="container"
                >
                  <div
                    id="website-logo"
                  >
                    <h1>
                      Store Manager
                    </h1>
                  </div>
                  <nav>
                    <ul>
                      <li>
                         
                        <NavLink
                          activeClassName="active"
                          ariaCurrent="true"
                          to="/dashboard/products"
                        >
                          <Route
                            path="/dashboard/products"
                          >
                            <Link
                              aria-current={false}
                              replace={false}
                              to="/dashboard/products"
                            >
                              <a
                                aria-current={false}
                                href="/dashboard/products"
                                onClick={[Function]}
                              >
                                Home
                              </a>
                            </Link>
                          </Route>
                        </NavLink>
                      </li>
                      <li>
                        <a
                          href="#"
                        >
                          About
                        </a>
                      </li>
                      <li>
                        <a
                          href="#"
                        >
                          Services
                        </a>
                      </li>
                      <Connect(Signout)>
                        <Signout
                          attendants={
                            Object {
                              "attendantCreateState": "STATE_CREATING",
                            }
                          }
                          auth={
                            Object {
                              "userDetails": Object {
                                "level": 2,
                              },
                            }
                          }
                          dispatch={[Function]}
                          products={
                            Object {
                              "productCreate": "STATE_CREATE_FAILED",
                              "productCreateError": "",
                            }
                          }
                        >
                          <li>
                            <a
                              href=""
                              onClick={[Function]}
                            >
                              Signout
                            </a>
                          </li>
                        </Signout>
                      </Connect(Signout)>
                    </ul>
                  </nav>
                </div>
              </header>
            </Header>
            <Connect(AttendantCreateForm)>
              <AttendantCreateForm
                attendants={
                  Object {
                    "attendantCreateState": "STATE_CREATING",
                  }
                }
                auth={
                  Object {
                    "userDetails": Object {
                      "level": 2,
                    },
                  }
                }
                dispatch={[Function]}
                products={
                  Object {
                    "productCreate": "STATE_CREATE_FAILED",
                    "productCreateError": "",
                  }
                }
              >
                <div
                  className="cont"
                >
                  <section>
                    <div
                      id="user-form"
                    >
                      <div
                        className="container"
                      >
                        <form
                          onSubmit={[Function]}
                        >
                          <h3>
                            New Attendant
                          </h3>
                          <div>
                            <label>
                              Name:
                            </label>
                            <br />
                            <input
                              id="name"
                              name="aname"
                              pattern=".{3,}"
                              placeholder="Enter Attendant's Name"
                              required={true}
                              title="Name must be at least 3 characters"
                              type="text"
                            />
                          </div>
                          <div>
                            <label>
                              Email:
                            </label>
                            <br />
                            <input
                              id="email"
                              name="aemail"
                              placeholder="Enter Attendant's Email"
                              required={true}
                              type="email"
                            />
                          </div>
                          <div
                            className="not-registered"
                          >
                            <span
                              className="lds-hourglass"
                            />
                          </div>
                          <button
                            type="submit"
                          >
                            Create
                          </button>
                          <br />
                        </form>
                      </div>
                    </div>
                  </section>
                </div>
              </AttendantCreateForm>
            </Connect(AttendantCreateForm)>
            <Footer>
              <footer>
                <p>
                   Store Manager Copyright Â© 2018
                </p>
              </footer>
            </Footer>
          </div>
        </CreateAttendant>
      </Connect(CreateAttendant)>
    </Router>
  </MemoryRouter>
</Provider>
`;
